[package]
name = "duskphantom-backend"
version = "0.0.2"
description = "Backend for DuskPhantom Compiler"
edition.workspace = true
license.workspace = true
license-file.workspace = true
repository.workspace = true


[lib]
name = "duskphantom_backend"
path = "src/lib.rs"

[[bench]]
name = "reg_set"
harness = false

[dependencies]
duskphantom-utils = { workspace = true, features = ["log_enabled"] }
duskphantom-frontend = { workspace = true }
duskphantom-middle = { workspace = true }
rayon = { workspace = true }
llvm-ir = { workspace = true, optional = true }
anyhow = { workspace = true }
rustc-hash = { workspace = true }
lazy_static = { workspace = true }
serde = { workspace = true }
thiserror = { workspace = true }
tempfile = { workspace = true }
serde_yaml = { workspace = true }
clang-front-back = { workspace = true }
z3 = { workspace = true, optional = true }

[features]
default = [
    "backend_opt",     # 用来指定是否开启后端优化,提交的时候应该开启
    "clang_enabled",   # 解除该行注释获取基于clang的前后端, 比赛提交的时候该行需要注释掉
    "gen_virtual_asm", # 解除该行注释获取生成虚拟汇编的功能
    # "ilp_alloc",       # 启动ilp 寄存器分配, 启动该特性会导致在寄存器冲突图比较小的情况下调用z3作为求解器的ilp寄存器分配
]
clang_enabled = ["llvm-ir"]
gen_virtual_asm = []
backend_opt = ["opt_address_computation"]
opt_address_computation = [] # 该特性用来指定是否开启s0辅助寻址计算优化
ilp_alloc = ["z3"]

[dev-dependencies]
criterion = { workspace = true }
duskphantom-graph = { workspace = true }
insta = { workspace = true }
indoc = { workspace = true }
rand = { workspace = true }
