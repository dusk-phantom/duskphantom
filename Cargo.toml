[package]
name = "hitc"
version = "0.1.0"
edition = "2021"
default-run = "compiler-cs"

[lib]
name = "compiler"
path = "src/lib.rs"

# 使用自己编写的前端中端后端
[[bin]]
name = "compiler"
path = "src/main.rs"

# 使用clang作为前端,使用llc作为后端
[[bin]]
name = "compiler-cl"
path = "src/main_clang_llc.rs"

# 使用clang作为前端,自身实现后端
[[bin]]
name = "compiler-cs"
path = "src/main_clang_self.rs"

# 使用自己实现的中端导出llvm ir,使用llc作为后端
[[bin]]
name = "compiler-sc"
path = "src/main_self_llc.rs"


# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
# clang = "2.0.0"
# 使用clap 稳定版
clap = "3.0.0-beta.2"
lazy_static = "1.4.0"
rand = "0.8.5"
rayon = "1.8.0"
serde = { version = "1.0.130", features = ["derive"] }
serde_yaml = "0.9.30"
thiserror = "1.0.50"
typed-arena = "2.0.2"
once_cell = "1.7.2"
llvm-ir = { version = "0.10.0", features = ["llvm-16"], optional = true }
tempfile = "3.9.0"
winnow = "0.6.5"

[dev-dependencies]
criterion = "0.3.0"

[[bench]]
name = "parse_expr"
harness = false

# 特性管理
[features]
default = [
    "clang_enabled",   # 解除该行注释获取基于clang的前后端, 比赛提交的时候该行需要注释掉
    "gen_virtual_asm", # 解除该行注释获取生成虚拟汇编的功能
]
clang_enabled = ["llvm-ir"]
gen_virtual_asm = []

[profile.release]
lto = true
codegen-units = 1 # 提交参赛代码的时候该行设置为1
strip = true
opt-level = 3
